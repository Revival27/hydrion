# Generated by Django 2.2.27 on 2024-05-24 10:34

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0039_task_orthophoto_bands'),
    ]

    operations = [
        migrations.CreateModel(
            name='Efficiency',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('rho', models.FloatField(db_column='rho', default=1000)),
                ('g', models.FloatField(db_column='gravity', default=9.81)),
                ('Q', models.FloatField(db_column='volumetric_flow_rate', default=3)),
                ('H', models.FloatField(db_column='effective_head', default=10)),
                ('P_out', models.FloatField(db_column='output_power', default=250)),
                ('P_in', models.FloatField(db_column='input_power')),
                ('efficiency', models.FloatField(db_column='efficiency')),
            ],
            options={
                'verbose_name': 'Efficiency',
                'db_table': 'turbine_efficiency',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HydroProject',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
                ('created_at', models.DateTimeField(db_column='created_at')),
                ('deadline', models.DateField(db_column='deadline')),
                ('description', models.TextField(db_column='description')),
            ],
            options={
                'verbose_name': 'Hydro Project',
                'db_table': 'hydroproject',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HydroSurvey',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('deadline', models.DateField(db_column='deadline', verbose_name='Határidő')),
                ('status', models.CharField(db_column='status', max_length=250, verbose_name='Státusz')),
                ('water_surface', models.CharField(db_column='water_surface', max_length=250, verbose_name='Vízfelület')),
                ('location', models.CharField(db_column='location', max_length=250, verbose_name='Helyszín')),
                ('flow_direction', models.CharField(choices=[('N', 'Észak'), ('E', 'Kelet'), ('S', 'Dél'), ('W', 'Nyugat')], db_column='flow_direction', max_length=10, verbose_name='Áramlás iránya')),
                ('flow_direction_speed', models.FloatField(db_column='flow_direction_speed', max_length=250, verbose_name='Áramlás mért sebessége')),
                ('segment_width', models.DecimalField(blank=True, db_column='segment_width', decimal_places=4, max_digits=1000, verbose_name='Szelvény szélessége')),
                ('segment_depth', models.DecimalField(blank=True, db_column='segment_depth', decimal_places=4, max_digits=1000, verbose_name='Szelvény mélysége')),
                ('estimated_waterflow', models.CharField(db_column='estimated_waterflow', max_length=250, verbose_name='Becsült vízhozam')),
                ('estimated_energy_production', models.DecimalField(blank=True, db_column='estimated_energy_production', decimal_places=4, max_digits=1000, verbose_name='Becsült energia termelés')),
            ],
            options={
                'verbose_name': 'Hydro Survey',
                'db_table': 'hydrosurvey',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
            ],
            options={
                'verbose_name': 'Project Status',
                'db_table': 'project_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
            ],
            options={
                'verbose_name': 'Task Status',
                'db_table': 'task_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
            ],
            options={
                'verbose_name': 'Team',
                'db_table': 'team',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Turbine',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('vortex', models.IntegerField(db_column='vortex')),
                ('turbine_type', models.CharField(db_column='turbine_type', max_length=50)),
                ('water_level', models.IntegerField(db_column='water_level')),
                ('continous', models.CharField(db_column='continous', max_length=3)),
            ],
            options={
                'verbose_name': 'Turbine',
                'db_table': 'turbine',
                'managed': True,
            },
        ),
        migrations.AlterField(
            model_name='setting',
            name='organization_website',
            field=models.URLField(blank=True, default='https://github.com/Revival27/hydrion', help_text='The website URL of your organization', max_length=255, null=True, verbose_name='Organization website'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='border',
            field=colorfield.fields.ColorField(default='#e7e7e7', help_text='The color of most borders.', max_length=25, verbose_name='Border'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='button_danger',
            field=colorfield.fields.ColorField(default='#e74c3c', help_text='Delete button color.', max_length=25, verbose_name='Button Danger'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='button_default',
            field=colorfield.fields.ColorField(default='#95a5a6', help_text='Default button color.',  max_length=25,  verbose_name='Button Default'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='button_primary',
            field=colorfield.fields.ColorField(default='#2c3e50', help_text='Primary button color.',  max_length=25,  verbose_name='Button Primary'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='dialog_warning',
            field=colorfield.fields.ColorField(default='#f39c12', help_text='The border color of warning dialogs.', max_length=25,  verbose_name='Dialog Warning'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='failed',
            field=colorfield.fields.ColorField(default='#ffcbcb', help_text='The background color of failed notifications.',  max_length=25,  verbose_name='Failed'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='header_background',
            field=colorfield.fields.ColorField(default='#3498db', help_text="Background color of the site's header.",  max_length=25,  verbose_name='Header Background'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='header_primary',
            field=colorfield.fields.ColorField(default='#ffffff', help_text="Text and icons in the site's header.",  max_length=25, verbose_name='Header Primary'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='highlight',
            field=colorfield.fields.ColorField(default='#f7f7f7', help_text='The background color of panels and some borders.', max_length=25,  verbose_name='Highlight'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='primary',
            field=colorfield.fields.ColorField(default='#2c3e50', help_text='Most text, icons, and borders.',  max_length=25,  verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='secondary',
            field=colorfield.fields.ColorField(default='#ffffff', help_text='The main background color, and text color of some buttons.', max_length=25, verbose_name='Secondary'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='success',
            field=colorfield.fields.ColorField(default='#cbffcd', help_text='The background color of success notifications.',  max_length=25, verbose_name='Success'),
        ),
        migrations.AlterField(
            model_name='theme',
            name='tertiary',
            field=colorfield.fields.ColorField(default='#3498db', help_text='Navigation links.',  max_length=25, verbose_name='Tertiary'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', max_length=250, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Team')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Member',
                'db_table': 'team_member',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
                ('created_at', models.DateField(db_column='created_at')),
                ('efficiency', models.CharField(db_column='efficiency', max_length=250)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.HydroProject')),
            ],
            options={
                'verbose_name': 'Reports',
                'db_table': 'report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HydroTask',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=250)),
                ('deadline', models.DateField(db_column='deadline')),
                ('description', models.TextField(db_column='description', max_length=1000)),
                ('start_date', models.DateField(db_column='start_date')),
                ('color', models.CharField(db_column='color', max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.HydroProject')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TaskStatus')),
            ],
            options={
                'verbose_name': 'Hydro Task',
                'db_table': 'hydrotask',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='hydroproject',
            name='project_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ProjectStatus'),
        ),
        migrations.AddField(
            model_name='hydroproject',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Team'),
        ),
    ]
